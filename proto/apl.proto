syntax = "proto3";
package proto;

option go_package = "./proto";

import "common.proto";

// Rotation options are based heavily on APL. See https://github.com/simulationcraft/simc/wiki/ActionLists.

message APLRotation {
    bool enabled = 20; // If false, use old rotation options.
	repeated APLPrepullAction prepull_actions = 1;
	repeated APLListItem priority_list = 2;
}

message APLPrepullAction {
    APLAction action = 1;
    string do_at = 2; // Should be a negative value. Uses the same syntax as APLValueConst.
    bool hide = 3;    // Causes this item to be ignored.
}

message APLListItem {
    bool hide = 1;        // Causes this item to be ignored.
    string notes = 2;     // Comments for the reader.
    APLAction action = 3; // The action to be performed.
    bool text_mode = 4;   // If this item is edited in text mode.
}

message APLAction {
    APLValue condition = 1; // If set, action will only execute if value is true or != 0.

    oneof action {
        APLActionSequence sequence = 2;
        APLActionResetSequence reset_sequence = 5;
        APLActionStrictSequence strict_sequence = 6;

        APLActionCastSpell cast_spell = 3;
        APLActionMultidot multidot = 8;
        APLActionAutocastOtherCooldowns autocast_other_cooldowns = 7;
        APLActionWait wait = 4;
    }
}

message APLValue {
    oneof value {
        // Operators
        APLValueConst const = 1;
        APLValueAnd and = 2;
        APLValueOr or = 3;
        APLValueNot not = 4;
        APLValueCompare cmp = 5;

        // Encounter values
        APLValueCurrentTime current_time = 7;
        APLValueCurrentTimePercent current_time_percent = 8;
        APLValueRemainingTime remaining_time = 9;
        APLValueRemainingTimePercent remaining_time_percent = 10;
        APLValueNumberTargets number_targets = 28;

        // Resource values
        APLValueCurrentHealth current_health = 26;
        APLValueCurrentHealthPercent current_health_percent = 27;
        APLValueCurrentMana current_mana = 11;
        APLValueCurrentManaPercent current_mana_percent = 12;
        APLValueCurrentRage current_rage = 14;
        APLValueCurrentEnergy current_energy = 15;
        APLValueCurrentComboPoints current_combo_points = 16;
        APLValueCurrentRunicPower current_runic_power = 25;

        // Rune Resource values
        APLValueCurrentRuneCount current_rune_count = 29;
        APLValueCurrentNonDeathRuneCount current_non_death_rune_count = 34;
        APLValueCurrentRuneDeath current_rune_death = 30;
        APLValueCurrentRuneActive current_rune_active = 31;
        APLValueRuneCooldown rune_cooldown = 32;
        APLValueNextRuneCooldown next_rune_cooldown = 33;

        // GCD values
        APLValueGCDIsReady gcd_is_ready = 17;
        APLValueGCDTimeToReady gcd_time_to_ready = 18;

        // Spell values
        APLValueSpellCanCast spell_can_cast = 19;
        APLValueSpellIsReady spell_is_ready = 20;
        APLValueSpellTimeToReady spell_time_to_ready = 21;

        // Aura values
        APLValueAuraIsActive aura_is_active = 22;
        APLValueAuraRemainingTime aura_remaining_time = 23;
        APLValueAuraNumStacks aura_num_stacks = 24;

        // Dot values
        APLValueDotIsActive dot_is_active = 6;
        APLValueDotRemainingTime dot_remaining_time = 13;
    }
}

///////////////////////////////////////////////////////////////////////////
//                                 ACTIONS
///////////////////////////////////////////////////////////////////////////

message APLActionSequence {
    string name = 1;

    repeated APLAction actions = 2;
}

message APLActionResetSequence {
    string sequence_name = 1;
}

message APLActionStrictSequence {
    repeated APLAction actions = 1;
}

message APLActionCastSpell {
    ActionID spell_id = 1;
}

message APLActionMultidot {
    ActionID spell_id = 1;
    int32 max_dots = 2;
    APLValue max_overlap = 3;
}

message APLActionAutocastOtherCooldowns {
}

message APLActionWait {
    APLValue duration = 1;
}

///////////////////////////////////////////////////////////////////////////
//                                  VALUES
///////////////////////////////////////////////////////////////////////////

enum APLValueType {
    ValueTypeUnknown = 0;
    ValueTypeBool = 1;
    ValueTypeInt = 2;
    ValueTypeFloat = 3;
    ValueTypeDuration = 4;
    ValueTypeString = 5;
}

message APLValueConst {
    string val = 1;
}

message APLValueAnd {
    repeated APLValue vals = 1;
}
message APLValueOr {
    repeated APLValue vals = 1;
}
message APLValueNot {
    APLValue val = 1;
}
message APLValueCompare {
    enum ComparisonOperator {
        OpUnknown = 0;
        OpEq = 1; // Equals
        OpNe = 2; // Not equals
        OpLt = 3; // Less than
        OpLe = 4; // Less than or equal
        OpGt = 5; // Greater than
        OpGe = 6; // Greater than or equal
    }
    ComparisonOperator op = 1;

    APLValue lhs = 2;
    APLValue rhs = 3;
}

message APLValueCurrentTime {}
message APLValueCurrentTimePercent {}
message APLValueRemainingTime {}
message APLValueRemainingTimePercent {}
message APLValueNumberTargets {}

message APLValueCurrentHealth {}
message APLValueCurrentHealthPercent {}
message APLValueCurrentMana {}
message APLValueCurrentManaPercent {}
message APLValueCurrentRage {}
message APLValueCurrentEnergy {}
message APLValueCurrentComboPoints {}
message APLValueCurrentRunicPower {}

enum APLValueRuneType {
    RuneUnknown = 0;
    RuneBlood = 1;
    RuneFrost = 2;
    RuneUnholy = 3;
    RuneDeath = 4;
}
enum APLValueRuneSlot {
    SlotUnknown = 0;
    SlotLeftBlood = 1;
    SlotRightBlood = 2;
    SlotLeftFrost = 3;
    SlotRightFrost = 4;
    SlotLeftUnholy = 5;
    SlotRightUnholy = 6;
}

message APLValueCurrentRuneCount{
    APLValueRuneType rune_type = 1;
}
message APLValueCurrentNonDeathRuneCount{
    APLValueRuneType rune_type = 1;
}
message APLValueCurrentRuneDeath{
    APLValueRuneSlot rune_slot = 1;
}
message APLValueCurrentRuneActive{
    APLValueRuneSlot rune_slot = 1;
}
message APLValueRuneCooldown{
    APLValueRuneType rune_type = 1;
}
message APLValueNextRuneCooldown{
    APLValueRuneType rune_type = 1;
}

message APLValueGCDIsReady {}
message APLValueGCDTimeToReady {}

message APLValueSpellCanCast {
    ActionID spell_id = 1;
}
message APLValueSpellIsReady {
    ActionID spell_id = 1;
}
message APLValueSpellTimeToReady {
    ActionID spell_id = 1;
}

message APLValueAuraIsActive {
    ActionID aura_id = 1;
}
message APLValueAuraRemainingTime {
    ActionID aura_id = 1;
}
message APLValueAuraNumStacks {
    ActionID aura_id = 1;
}

message APLValueDotIsActive {
    ActionID spell_id = 1;
}
message APLValueDotRemainingTime {
    ActionID spell_id = 1;
}
